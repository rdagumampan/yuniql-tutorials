trigger:
- master

pool:
  vmImage: 'windows-latest'

stages:

- stage: deployToDev
  displayName: Deploy to DEV  
  jobs:
    - deployment: dev
      displayName: Deploy to aws-postgresql

      environment: aws-dev

      strategy:
        runOnce:
          deploy:
            steps:
            - checkout: self

            - task: CmdLine@2
              displayName: clone postgresql samples repo
              inputs:
                script: |
                  git clone https://github.com/rdagumampan/yuniql $(Build.SourcesDirectory)\yuniql

            - task: UseYUNIQLCLI@1
              displayName: yuniql install
              inputs:
                version: 'latest'

            - task: EraseYuniqlCLI@1
              displayName: yuniql erase
              inputs:
                version: 'latest'
                connectionString: '$(AwsPostgreSqlDemoDatabase)'
                workspacePath: '$(Build.SourcesDirectory)\yuniql\samples\basic-postgresql-sample'
                targetPlatform: 'postgresql'
                additionalArguments: '--force --debug'

            - task: RunYUNIQLCLI@1
              displayName: yuniql run
              inputs:
                version: 'latest'
                connectionString: '$(AwsPostgreSqlDemoDatabase)'
                workspacePath: '$(Build.SourcesDirectory)\yuniql\samples\basic-postgresql-sample'
                targetPlatform: 'PostgreSql'
                additionalArguments: '--debug'

- stage: deployToTest
  displayName: Deploy to TEST  
  jobs:
    - deployment: test
      # dependsOn: deployToDev
      displayName: Deploy to aws-postgresql

      environment: aws-test

      strategy:
        runOnce:
          deploy:
            steps:
            - checkout: self

            - task: CmdLine@2
              displayName: clone postgresql samples repo
              inputs:
                script: |
                  git clone https://github.com/rdagumampan/yuniql $(Build.SourcesDirectory)\yuniql

            - task: UseYUNIQLCLI@1
              displayName: yuniql install
              inputs:
                version: 'latest'

            - task: EraseYuniqlCLI@1
              displayName: yuniql erase
              inputs:
                version: 'latest'
                connectionString: '$(AwsPostgreSqlDemoDatabase)'
                workspacePath: '$(Build.SourcesDirectory)\yuniql\samples\basic-postgresql-sample'
                targetPlatform: 'postgresql'
                additionalArguments: '--force --debug'

            - task: RunYUNIQLCLI@1
              displayName: yuniql run
              inputs:
                version: 'latest'
                connectionString: '$(AwsPostgreSqlDemoDatabase)'
                workspacePath: '$(Build.SourcesDirectory)\yuniql\samples\basic-postgresql-sample'
                targetPlatform: 'PostgreSql'
                additionalArguments: '--debug'

- stage: deployToStaging
  displayName: Deploy to STAGING  
  jobs:
    - deployment: staging
      # dependsOn: deployToTest
      displayName: Deploy to aws-postgresql

      environment: aws-staging

      strategy:
        runOnce:
          deploy:
            steps:
            - checkout: self

            - task: CmdLine@2
              displayName: clone postgresql samples repo
              inputs:
                script: |
                  git clone https://github.com/rdagumampan/yuniql $(Build.SourcesDirectory)\yuniql

            - task: UseYUNIQLCLI@1
              displayName: yuniql install
              inputs:
                version: 'latest'

            - task: EraseYuniqlCLI@1
              displayName: yuniql erase
              inputs:
                version: 'latest'
                connectionString: '$(AwsPostgreSqlDemoDatabase)'
                workspacePath: '$(Build.SourcesDirectory)\yuniql\samples\basic-postgresql-sample'
                targetPlatform: 'postgresql'
                additionalArguments: '--debug'

            - task: RunYUNIQLCLI@1
              displayName: yuniql run
              inputs:
                version: 'latest'
                connectionString: '$(AwsPostgreSqlDemoDatabase)'
                workspacePath: '$(Build.SourcesDirectory)\yuniql\samples\basic-postgresql-sample'
                targetPlatform: 'PostgreSql'
                additionalArguments: '--debug'

- stage: deployToProduction
  displayName: Deploy to PRODUCTION  
  jobs:
    - deployment: production
      # dependsOn: deployToStaging
      displayName: Deploy to aws-postgresql

      environment: aws-production

      strategy:
        runOnce:
          deploy:
            steps:
            - checkout: self

            - task: CmdLine@2
              displayName: clone postgresql samples repo
              inputs:
                script: |
                  git clone https://github.com/rdagumampan/yuniql $(Build.SourcesDirectory)\yuniql

            - task: UseYUNIQLCLI@1
              displayName: yuniql install
              inputs:
                version: 'latest'

            - task: EraseYuniqlCLI@1
              displayName: yuniql erase
              inputs:
                version: 'latest'
                connectionString: '$(AwsPostgreSqlDemoDatabase)'
                workspacePath: '$(Build.SourcesDirectory)\yuniql\samples\basic-postgresql-sample'
                targetPlatform: 'postgresql'
                additionalArguments: '--debug'

            - task: RunYUNIQLCLI@1
              displayName: yuniql run
              inputs:
                version: 'latest'
                connectionString: '$(AwsPostgreSqlDemoDatabase)'
                workspacePath: '$(Build.SourcesDirectory)\yuniql\samples\basic-postgresql-sample'
                targetPlatform: 'PostgreSql'
                additionalArguments: '--debug'
